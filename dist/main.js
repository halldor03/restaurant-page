(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>u});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),c=t(667),s=t.n(c),d=new URL(t(666),t.b),l=i()(a());l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans&display=swap);"]);var A=s()(d);l.push([n.id,'/* to show boxes */\r\n/* * {\r\n  border: 1px black solid;\r\n} */\r\n\r\n/* simple reset */\r\n* {\r\n  padding: 0px;\r\n  margin: 0px;\r\n  box-sizing: border-box;\r\n  font-family: "Open Sans", sans-serif;\r\n  font-size: 16px;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  list-style-type: none;\r\n}\r\n\r\n#content {\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(255, 255, 255, 0.5);\r\n  background-image: url('+A+");\r\n  background-attachment: fixed;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-blend-mode: lighten;\r\n}\r\n\r\n.subtitleContact > a {\r\n  text-decoration: underline;\r\n  font-size: inherit;\r\n}\r\n\r\nimg,\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n\r\nbutton {\r\n  appearance: none;\r\n  border: 0;\r\n  background-color: rgba(0, 128, 0, 0.6);\r\n  color: #ffffff;\r\n  border-radius: 1.5rem;\r\n  height: 3rem;\r\n  padding: 0 1rem 0 1rem;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: rgba(0, 128, 0, 0.85);\r\n  transition: 0.75s;\r\n}\r\n\r\nheader {\r\n  height: 5vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 2rem;\r\n  background: rgba(255, 255, 255, 0.4);\r\n}\r\n\r\n.social {\r\n  display: flex;\r\n  margin-left: -1rem;\r\n}\r\n\r\n.fb,\r\n.insta {\r\n  height: 40px;\r\n  margin: 0.25rem;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n}\r\n\r\n.nav > button {\r\n  margin: 0 1rem 0 1rem;\r\n}\r\n\r\n.lang {\r\n  display: flex;\r\n}\r\n\r\n.langPL,\r\n.langEN,\r\n.langDE {\r\n  margin: 0.25rem;\r\n  height: 25px;\r\n}\r\n\r\nmain {\r\n  height: 90vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n\r\n.title {\r\n  font-size: 4rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.5rem;\r\n  margin-bottom: 1rem;\r\n  font-style: italic;\r\n}\r\n\r\n.subtitleContact {\r\n  font-size: 1.5rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.orderText {\r\n  font-size: 1rem;\r\n  margin-top: 0.5rem;\r\n  height: 24px;\r\n}\r\n\r\nfooter {\r\n  height: 5vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 2rem;\r\n  background: rgba(255, 255, 255, 0.4);\r\n}\r\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAEA,kBAAkB;AAClB;;GAEG;;AAEH,iBAAiB;AACjB;EACE,YAAY;EACZ,WAAW;EACX,sBAAsB;EACtB,oCAAoC;EACpC,eAAe;EACf,qBAAqB;EACrB,cAAc;EACd,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,oCAAoC;EACpC,yDAAiD;EACjD,4BAA4B;EAC5B,sBAAsB;EACtB,2BAA2B;EAC3B,8BAA8B;AAChC;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;AACpB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,SAAS;EACT,sCAAsC;EACtC,cAAc;EACd,qBAAqB;EACrB,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,uCAAuC;EACvC,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,aAAa;EACb,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,kBAAkB;AACpB;;AAEA;;EAEE,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;AACf;;AAEA;;;EAGE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,qBAAqB;AACvB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,oCAAoC;AACtC",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Open+Sans&display=swap");\r\n\r\n/* to show boxes */\r\n/* * {\r\n  border: 1px black solid;\r\n} */\r\n\r\n/* simple reset */\r\n* {\r\n  padding: 0px;\r\n  margin: 0px;\r\n  box-sizing: border-box;\r\n  font-family: "Open Sans", sans-serif;\r\n  font-size: 16px;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  list-style-type: none;\r\n}\r\n\r\n#content {\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(255, 255, 255, 0.5);\r\n  background-image: url(../src/img/background1.jpg);\r\n  background-attachment: fixed;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-blend-mode: lighten;\r\n}\r\n\r\n.subtitleContact > a {\r\n  text-decoration: underline;\r\n  font-size: inherit;\r\n}\r\n\r\nimg,\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n\r\nbutton {\r\n  appearance: none;\r\n  border: 0;\r\n  background-color: rgba(0, 128, 0, 0.6);\r\n  color: #ffffff;\r\n  border-radius: 1.5rem;\r\n  height: 3rem;\r\n  padding: 0 1rem 0 1rem;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: rgba(0, 128, 0, 0.85);\r\n  transition: 0.75s;\r\n}\r\n\r\nheader {\r\n  height: 5vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 2rem;\r\n  background: rgba(255, 255, 255, 0.4);\r\n}\r\n\r\n.social {\r\n  display: flex;\r\n  margin-left: -1rem;\r\n}\r\n\r\n.fb,\r\n.insta {\r\n  height: 40px;\r\n  margin: 0.25rem;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n}\r\n\r\n.nav > button {\r\n  margin: 0 1rem 0 1rem;\r\n}\r\n\r\n.lang {\r\n  display: flex;\r\n}\r\n\r\n.langPL,\r\n.langEN,\r\n.langDE {\r\n  margin: 0.25rem;\r\n  height: 25px;\r\n}\r\n\r\nmain {\r\n  height: 90vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n\r\n.title {\r\n  font-size: 4rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.subtitle {\r\n  font-size: 1.5rem;\r\n  margin-bottom: 1rem;\r\n  font-style: italic;\r\n}\r\n\r\n.subtitleContact {\r\n  font-size: 1.5rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.orderText {\r\n  font-size: 1rem;\r\n  margin-top: 0.5rem;\r\n  height: 24px;\r\n}\r\n\r\nfooter {\r\n  height: 5vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 2rem;\r\n  background: rgba(255, 255, 255, 0.4);\r\n}\r\n'],sourceRoot:""}]);const u=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],c=0;c<n.length;c++){var s=n[c],d=r.base?s[0]+r.base:s[0],l=o[d]||0,A="".concat(d," ").concat(l);o[d]=l+1;var u=t(A),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var p=a(m,r);r.byIndex=c,e.splice(c,0,{identifier:A,updater:p,references:1})}i.push(A)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var s=r(n,a),d=0;d<o.length;d++){var l=t(o[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},666:(n,e,t)=>{n.exports=t.p+"ce10924edd26f63f18d1.jpg"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),i=t.n(o),c=t(565),s=t.n(c),d=t(216),l=t.n(d),A=t(589),u=t.n(A),m=t(28),p={};p.styleTagTransform=u(),p.setAttributes=s(),p.insert=i().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=l(),e()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals,t.p,t.p,t.p,t.p,t.p,t.p,t.p;const g=(()=>{const n=document.getElementById("content");return{createHeader:()=>{const e=document.createElement("header");n.appendChild(e);const t=document.createElement("div");t.classList.add("social"),e.appendChild(t);const r=document.createElement("img");r.classList.add("fb"),r.src="../src/img/fb.png",t.appendChild(r);const a=document.createElement("img");a.classList.add("insta"),a.src="../src/img/insta.png",t.appendChild(a);const o=document.createElement("div");o.classList.add("nav"),e.appendChild(o);const i=document.createElement("button");i.classList.add("home"),i.innerText="home",o.appendChild(i);const c=document.createElement("button");c.classList.add("menu"),c.innerText="our menu",o.appendChild(c);const s=document.createElement("button");s.classList.add("openingHours"),s.innerText="opening hours",o.appendChild(s);const d=document.createElement("button");d.classList.add("contact"),d.innerText="contact us",o.appendChild(d);const l=document.createElement("div");l.classList.add("lang"),e.appendChild(l);const A=document.createElement("img");A.classList.add("langPL"),A.src="../src/img/pl.png",l.appendChild(A);const u=document.createElement("img");u.classList.add("langEN"),u.src="../src/img/en.png",l.appendChild(u);const m=document.createElement("img");m.classList.add("langDE"),m.src="../src/img/de.png",l.appendChild(m)},createMain:()=>{const n=document.querySelector("header"),e=document.createElement("main");n.after(e);const t=document.createElement("div");t.classList.add("title"),t.innerText="Welcome to the best restaurant in the world!",e.appendChild(t);const r=document.createElement("div");r.classList.add("subtitle"),r.innerText="~ We have literally everything! ~",e.appendChild(r);const a=document.createElement("button");a.classList.add("orderButton"),a.innerText="order online now!",e.appendChild(a);const o=document.createElement("div");o.classList.add("orderText"),e.appendChild(o),a.addEventListener("click",(()=>{o.innerText="(coming soon)"}))},createFooter:()=>{const e=document.createElement("footer");e.innerText="Made by @halldor03 for TheOdinProject",n.appendChild(e)}}})(),h=()=>{const n=document.querySelector("header"),e=document.createElement("main");n.after(e);const t=document.createElement("div");t.classList.add("title"),t.innerText="You don't get it, do you?",e.appendChild(t);const r=document.createElement("div");r.classList.add("subtitleContact"),r.innerText="We really DO have everything you can think of!",e.appendChild(r);const a=document.createElement("div");a.classList.add("subtitleContact"),a.innerHTML="(or at least more than <a href=https://t3t3c.github.io/Restaurant-Page/>the guy with the noodles next door</a>)",e.appendChild(a)},E=()=>{const n=document.querySelector("header"),e=document.createElement("main");n.after(e);const t=document.createElement("div");t.classList.add("title"),t.innerText="Come visit us!",e.appendChild(t);const r=new Date;let a=r.getHours(),o=r.getDay();const i=document.createElement("div");i.classList.add("subtitleContact"),i.innerHTML=o<=5&&a>=13&&a<=21||o>5&&a>=13&&a<=23?"We are currently open!":"Sorry, we are currently closed",e.appendChild(i);const c=document.createElement("ul");c.classList.add("subtitleContact"),e.appendChild(c);const s=document.createElement("li");s.classList.add("subtitleContact"),s.innerText="Monday: 13-21",c.appendChild(s);const d=document.createElement("li");d.classList.add("subtitleContact"),d.innerText="Tuesday: 13-21",c.appendChild(d);const l=document.createElement("li");l.classList.add("subtitleContact"),l.innerText="Wednesday: 13-21",c.appendChild(l);const A=document.createElement("li");A.classList.add("subtitleContact"),A.innerText="Thursday: 13-21",c.appendChild(A);const u=document.createElement("li");u.classList.add("subtitleContact"),u.innerText="Friday: 13-23",c.appendChild(u);const m=document.createElement("li");m.classList.add("subtitleContact"),m.innerText="Saturday: 13-23",c.appendChild(m);const p=document.createElement("li");p.classList.add("subtitleContact"),p.innerText="Sunday: 13-23",c.appendChild(p)},C=()=>{const n=document.querySelector("header"),e=document.createElement("main");n.after(e);const t=document.createElement("div");t.classList.add("title"),t.innerText="Don't wait, get in touch!",e.appendChild(t);const r=document.createElement("div");r.classList.add("subtitleContact"),r.innerText="+48 123 456 789",e.appendChild(r);const a=document.createElement("img");a.classList.add("insta"),a.src="../src/img/phone.png",r.before(a);const o=document.createElement("div");o.classList.add("subtitleContact"),o.innerText="bestrestaurant@gmail.com",e.appendChild(o);const i=document.createElement("img");i.classList.add("insta"),i.src="../src/img/mail.png",o.before(i)};g.createHeader(),g.createMain(),g.createFooter();const f=document.querySelector(".home"),b=document.querySelector(".menu"),v=document.querySelector(".openingHours"),B=document.querySelector(".contact"),y=()=>{document.querySelector("main").remove()};f.addEventListener("click",(()=>{y(),g.createMain()})),b.addEventListener("click",(()=>{y(),h()})),v.addEventListener("click",(()=>{y(),E()})),B.addEventListener("click",(()=>{y(),C()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,